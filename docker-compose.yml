services:
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: superSecurePassword
    volumes:
      - miniodata:/data
    command: server /data --console-address ":9001"

  # create-buckets is a service that creates buckets for our application
  create-buckets:
    image: minio/mc
    depends_on:
      - minio
    restart: on-failure
    volumes:
      - ./scripts:/scripts
      - ./data:/data
    environment:
      MINIO_USER: admin
      MINIO_PWD: superSecurePassword
      RAW_BUCKET: raw-data
      TRANSFORMED_BUCKET: transformed-data
      DATA_LOCATION: /data
    entrypoint: /scripts/create-buckets.sh

  # upload-data is a service that creates buckets for our application
  upload-data:
    image: minio/mc
    depends_on:
      minio:
        condition: service_started
      create-buckets:
        condition: service_completed_successfully
      transform-server:
        condition: service_healthy
    restart: on-failure
    volumes:
      - ./scripts:/scripts
      - ./data:/data/
    environment:
      MINIO_USER: admin
      MINIO_PWD: superSecurePassword
      RAW_BUCKET: raw-data
      DATA_LOCATION: /data/
    entrypoint: /scripts/upload-raw-data.sh

  transform-server:
    build:
      context: ./transform_server
    healthcheck:
      test: ["CMD", "curl", "http://transform-server:8000/health"]
      interval: 1s
    environment:
      TRANSFORMED_BUCKET: transformed-data
      MINIO_USER: admin
      MINIO_PWD: superSecurePassword
    ports:
      - 8000:8000
volumes:
  miniodata:
